import matplotlib.pyplot as plt
import numpy as np

result = np.array([
        0.975505,
        1.03813,
        1.24397,
        1.27462,
        0.570942,
        0.648684,
        0.986135,
        0.986896,
        1.24383,
        1.23156,
        0.571024,
        0.590549,
        0.981097,
        0.970332,
        1.23265,
        1.23729,
        0.562389,
        0.588505,
        0.958661,
        0.970906,
        1.24718,
        1.22795,
        0.556916,
        0.56227,
        0.972796,
        0.975644,
        1.22562,
        1.23531,
        0.561504,
        0.557034,
        0.96409,
        0.956318,
        1.21494,
        1.21726,
        0.556961,
        0.55886,
        0.968747,
        0.963779,
        1.217,
        1.21341,
        0.562217,
        0.564385,
        0.960427,
        0.95448,
        1.24532,
        1.21208,
        0.566433,
        0.552627,
        0.960141,
        0.955175,
        1.22673,
        1.2124,
        0.579648,
        0.552445,
        0.956966,
        0.95567,
        1.21989,
        1.21098,
        0.56511,
        0.552201,
        0.95748,
        0.957635,
        1.2223,
        1.21306,
        0.562726,
        0.56919,
        0.956047,
        0.960809,
        1.21886,
        1.21594,
        0.55894,
        0.552177,
        0.501526,
        0.505256,
        0.63576,
        0.648134,
        0.299995,
        0.33197,
        0.499398,
        0.503127,
        0.63538,
        0.636692,
        0.297576,
        0.335616,
        0.498868,
        0.502422,
        0.631999,
        0.632986,
        0.297345,
        0.303501,
        0.498116,
        0.497951,
        0.628611,
        0.633909,
        0.303061,
        0.30393,
        0.49602,
        0.509666,
        0.636604,
        0.633796,
        0.304042,
        0.298174,
        0.494774,
        0.49606,
        0.626686,
        0.634695,
        0.295847,
        0.301891,
        0.49918,
        0.495459,
        0.634667,
        0.639165,
        0.301692,
        0.299451,
        0.499341,
        0.494609,
        0.633273,
        0.623575,
        0.300393,
        0.2929,
        0.497207,
        0.494856,
        0.65213,
        0.635849,
        0.318083,
        0.29308,
        0.522192,
        0.500313,
        0.629463,
        0.623195,
        0.302148,
        0.292011,
        0.504808,
        0.502957,
        0.62755,
        0.624384,
        0.297175,
        0.292553,
        0.506325,
        0.497847,
        0.637914,
        0.625314,
        0.300973,
        0.292301,
        0.269203,
        0.27233,
        0.335338,
        0.343319,
        0.172161,
        0.202437,
        0.268469,
        0.268545,
        0.343701,
        0.335747,
        0.16687,
        0.173213,
        0.276933,
        0.268031,
        0.333915,
        0.332769,
        0.166622,
        0.168045,
        0.265308,
        0.266397,
        0.331132,
        0.33091,
        0.165984,
        0.165789,
        0.265261,
        0.265663,
        0.331386,
        0.329466,
        0.165069,
        0.169616,
        0.271171,
        0.26489,
        0.3401,
        0.331477,
        0.182216,
        0.175867,
        0.269224,
        0.265822,
        0.34933,
        0.335198,
        0.169407,
        0.176175,
        0.269132,
        0.266272,
        0.335228,
        0.329924,
        0.171843,
        0.164416,
        0.267809,
        0.266238,
        0.338032,
        0.330762,
        0.171964,
        0.164368,
        0.267178,
        0.266058,
        0.33463,
        0.330258,
        0.169994,
        0.163228,
        0.267436,
        0.267585,
        0.338051,
        0.329774,
        0.178075,
        0.164039,
        0.275907,
        0.271789,
        0.352307,
        0.334729,
        0.171374,
        0.16479,
        0.336447,
        0.286956,
        0.512008,
        0.412594,
        0.213003,
        0.222346,
        0.404812,
        0.28256,
        0.403259,
        0.36052,
        0.269209,
        0.185188,
        0.388526,
        0.290133,
        0.495649,
        0.353851,
        0.268656,
        0.24981,
        0.313618,
        0.283032,
        0.462093,
        0.348115,
        0.330419,
        0.232635,
        0.327571,
        0.293496,
        0.737542,
        0.350636,
        0.234469,
        0.234936,
        0.390366,
        0.284416,
        0.499624,
        0.349067,
        0.250778,
        0.232086,
        0.333235,
        0.323268,
        0.413468,
        0.48117,
        0.216925,
        0.241729,
        0.334421,
        0.275398,
        0.48522,
        0.400113,
        0.303667,
        0.182754,
        0.326546,
        0.281328,
        0.403187,
        0.351649,
        0.20687,
        0.214528,
        0.397725,
        0.344898,
        0.433339,
        0.348867,
        0.265546,
        0.194095,
        0.298791,
        0.320782,
        0.460269,
        0.345875,
        0.208145,
        0.236093,
        0.330968,
        0.293836,
        0.45686,
        0.352397,
        0.210267,
        0.220862,
        0.219198,
        0.242881,
        0.111313,
        0.142529,
        0.0666916,
        0.0944974,
        0.226145,
        0.23451,
        0.101646,
        0.100823,
        0.058637,
        0.073959,
        0.226612,
        0.228593,
        0.0946419,
        0.108798,
        0.0626869,
        0.0680452,
        0.216961,
        0.223803,
        0.106696,
        0.0970156,
        0.0634752,
        0.0746604,
        0.222766,
        0.22919,
        0.0975825,
        0.101455,
        0.0547041,
        0.0645704,
        0.220346,
        0.226074,
        0.098534,
        0.0939825,
        0.0642309,
        0.0692507,
        0.216245,
        0.223125,
        0.100327,
        0.0933709,
        0.063953,
        0.0546898,
        0.223298,
        0.221631,
        0.117621,
        0.0986555,
        0.0588948,
        0.0552188,
        0.224913,
        0.215644,
        0.0944137,
        0.092335,
        0.0563527,
        0.0587368,
        0.217935,
        0.215966,
        0.0939427,
        0.0931448,
        0.0560776,
        0.0542766,
        0.21819,
        0.219637,
        0.0935422,
        0.0927387,
        0.054641,
        0.0594064,
        0.222719,
        0.222421,
        0.095897,
        0.093568,
        0.0560728,
        0.0550759,
        0.265559,
        0.269198,
        0.136715,
        0.133019,
        0.0811703,
        0.0710523,
        0.266181,
        0.266138,
        0.132119,
        0.144044,
        0.0736746,
        0.081599,
        0.264235,
        0.265532,
        0.131263,
        0.141576,
        0.0737844,
        0.0760637,
        0.264373,
        0.263147,
        0.13052,
        0.130934,
        0.0718092,
        0.072641,
        0.278486,
        0.261868,
        0.134156,
        0.130473,
        0.0717869,
        0.072569,
        0.264296,
        0.262959,
        0.130254,
        0.128322,
        0.0720167,
        0.0710315,
        0.265173,
        0.261548,
        0.131057,
        0.128884,
        0.0722922,
        0.0709129,
        0.263309,
        0.26248,
        0.129996,
        0.128732,
        0.0723203,
        0.0703565,
        0.26391,
        0.264006,
        0.130317,
        0.128315,
        0.0734906,
        0.0717136,
        0.265527,
        0.263566,
        0.131692,
        0.128859,
        0.081973,
        0.0706875,
        0.271145,
        0.264128,
        0.130684,
        0.128773,
        0.0708868,
        0.070723,
        0.271405,
        0.269849,
        0.135153,
        0.129778,
        0.073262,
        0.0708375,
        0.273681,
        0.309711,
        0.206192,
        0.222246,
        0.111872,
        0.132823,
        0.279332,
        0.287281,
        0.202101,
        0.207553,
        0.110982,
        0.118958,
        0.272995,
        0.27986,
        0.211402,
        0.209062,
        0.1149,
        0.107113,
        0.270469,
        0.269174,
        0.199281,
        0.199227,
        0.108018,
        0.105422,
        0.269839,
        0.279398,
        0.203229,
        0.197597,
        0.105871,
        0.112804,
        0.26917,
        0.268696,
        0.199464,
        0.197021,
        0.104609,
        0.112799,
        0.268648,
        0.267822,
        0.210081,
        0.202662,
        0.104691,
        0.1022,
        0.26957,
        0.294037,
        0.200901,
        0.196517,
        0.115707,
        0.111532,
        0.270785,
        0.268365,
        0.207649,
        0.224165,
        0.104394,
        0.101956,
        0.281024,
        0.268201,
        0.217797,
        0.206964,
        0.109861,
        0.101669,
        0.277467,
        0.285039,
        0.200211,
        0.197303,
        0.103203,
        0.101536,
        0.277549,
        0.27339,
        0.207301,
        0.198225,
        0.115375,
        0.11062,
        0.269538,
        0.27696,
        0.335237,
        0.343257,
        0.167416,
        0.18538,
        0.268329,
        0.276084,
        0.335572,
        0.33636,
        0.166207,
        0.186145,
        0.266705,
        0.268045,
        0.340901,
        0.333557,
        0.166548,
        0.171842,
        0.266102,
        0.266485,
        0.331611,
        0.331247,
        0.166484,
        0.166201,
        0.266449,
        0.265153,
        0.330895,
        0.330234,
        0.165272,
        0.164147,
        0.267515,
        0.264894,
        0.334183,
        0.330131,
        0.16803,
        0.163477,
        0.267923,
        0.265261,
        0.334986,
        0.3297,
        0.168786,
        0.163741,
        0.266054,
        0.265999,
        0.333934,
        0.330215,
        0.170534,
        0.163143,
        0.266899,
        0.265607,
        0.335465,
        0.329653,
        0.170655,
        0.171195,
        0.266734,
        0.266072,
        0.334799,
        0.330158,
        0.170788,
        0.16358,
        0.268226,
        0.266353,
        0.336746,
        0.329887,
        0.166145,
        0.163421,
        0.275768,
        0.271386,
        0.350283,
        0.333489,
        0.171198,
        0.164658
        ])

chunk_size = [2**i for i in range(12)]
threads_number = [2**i for i in range(3, 6)]
iterations = [2**i for i in range(7, 11)]
newresult = result.reshape(8, -1)

for i in range(12):
    plt.figure()
    plt.subplot(131)
    plt.title(f"Region 1 with {chunk_size[i]} chunk size")
    plt.plot(threads_number, newresult[:3, i * 6], label="static")
    plt.plot(threads_number, newresult[:3, i * 6 + 1], label="dynamic")
    plt.xlabel("threads number")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.subplot(132)
    plt.title(f"Region 2 with {chunk_size[i]} chunk size")
    plt.plot(threads_number, newresult[:3, i * 6 + 2], label="static")
    plt.plot(threads_number, newresult[:3, i * 6 + 3], label="dynamic")
    plt.xlabel("threads number")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.subplot(133)
    plt.title(f"Region 3 with {chunk_size[i]} chunk size")
    plt.plot(threads_number, newresult[:3, i * 6 + 4], label="static")
    plt.plot(threads_number, newresult[:3, i * 6 + 5], label="dynamic")
    plt.xlabel("threads number")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.show()
    plt.figure()
    plt.subplot(131)
    plt.title(f"Region 1 with {chunk_size[i]} chunk size")
    plt.plot(iterations, newresult[4:8, i * 6], label="static")
    plt.plot(iterations, newresult[4:8, i * 6 + 1], label="dynamic")
    plt.xlabel("Number of iterations")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.subplot(132)
    plt.title(f"Region 2 with {chunk_size[i]} chunk size")
    plt.plot(iterations, newresult[4:8, i * 6 + 2], label="static")
    plt.plot(iterations, newresult[4:8, i * 6 + 3], label="dynamic")
    plt.xlabel("Number of iterations")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.subplot(133)
    plt.title(f"Region 3 with {chunk_size[i]} chunk size")
    plt.plot(iterations, newresult[4:8, i * 6 + 4], label="static")
    plt.plot(iterations, newresult[4:8, i * 6 + 5], label="dynamic")
    plt.xlabel("Number of iterations")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.show()
   
threads_number.append(64)
for i in range(4):
    plt.figure()
    plt.subplot(131)
    plt.title(f"Region 1 with {threads_number[i]} threads")
    plt.plot(chunk_size, newresult[i, ::6], label="static")
    plt.plot(chunk_size, newresult[i, 1::6], label="dynamic")
    plt.xlabel("chunk_size")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.subplot(132)
    plt.title(f"Region 2 with {threads_number[i]} threads")
    plt.plot(chunk_size, newresult[i, 2::6], label="static")
    plt.plot(chunk_size, newresult[i, 3::6], label="dynamic")
    plt.xlabel("chunk_size")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.subplot(133)
    plt.title(f"Region 3 with {threads_number[i]} threads")
    plt.plot(chunk_size, newresult[i, 4::6], label="static")
    plt.plot(chunk_size, newresult[i, 5::6], label="dynamic")
    plt.xlabel("chunk_size")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.show()
    plt.figure()
    plt.subplot(131)
    plt.title(f"Region 1 with {iterations[i]} iterations")
    plt.plot(chunk_size, newresult[i + 4, ::6], label="static")
    plt.plot(chunk_size, newresult[i + 4, 1::6], label="dynamic")
    plt.xlabel("chunk_size")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.subplot(132)
    plt.title(f"Region 2 with {iterations[i]} iterations")
    plt.plot(chunk_size, newresult[i + 4, 2::6], label="static")
    plt.plot(chunk_size, newresult[i + 4, 3::6], label="dynamic")
    plt.xlabel("chunk_size")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.subplot(133)
    plt.title(f"Region 3 with {iterations[i]} iterations")
    plt.plot(chunk_size, newresult[i + 4, 4::6], label="static")
    plt.plot(chunk_size, newresult[i + 4, 5::6], label="dynamic")
    plt.xlabel("chunk_size")
    plt.ylabel("time")
    plt.xscale('log', base=2)
    plt.legend()
    plt.show()
